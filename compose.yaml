services:
  proxy:
    image: nginx:alpine
    configs:
      - source: proxy_config
        target: /etc/nginx/conf.d/default.conf
    depends_on:
      - fe
      - api
    networks:
      front-tier:
        ipv4_address: 172.15.0.2
    ports:
      - "80:80"
    restart: unless-stopped

  fe:
    image: ghcr.io/olarnr/studentproj/fe
    build: 
      context: https://github.com/olarnr/int210-studentproj.git#main:studentproj-fe
#      context: studentproj-fe
      dockerfile: multi.Dockerfile
    networks:
      front-tier:
        ipv4_address: 172.15.0.3
        aliases:
          - studentproj-fe
    restart: unless-stopped

  api:
    image: ghcr.io/olarnr/studentproj/api
    build: 
      context: https://github.com/olarnr/int210-studentproj.git#main:studentproj-api
#      context: studentproj-api
      dockerfile: multi.Dockerfile
    environment:
      - mysql_url=studentproj-db
    depends_on:
      db:
        condition: service_healthy
#        condition: service_started
    networks:
      front-tier:
        ipv4_address: 172.15.0.4
        aliases:
          - studentproj-api
      back-tier:
        ipv4_address: 172.15.1.4
    restart: unless-stopped

  db:
    image: mysql/mysql-server
    env_file: studentproj-db/env.list
    volumes: 
      - ./studentproj-db/scripts:/docker-entrypoint-initdb.d
      - db-datadir:/var/lib/mysql
    healthcheck:
      test: ["CMD", "/healthcheck.sh"]
      interval: 2s
      timeout: 2s
      retries: 20 
    networks:
      back-tier:
        ipv4_address: 172.15.1.5
        aliases:
          - studentproj-db
    restart: unless-stopped


configs:
  proxy_config:
    file: studentproj-proxy/proxy.conf

volumes:
  db-datadir:

networks:
  front-tier:
    ipam:
       config:
         - subnet: "172.15.0.0/24"
  back-tier:
    ipam:
       config:
         - subnet: "172.15.1.0/24"
